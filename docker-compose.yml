version: '3.8'

services:
  user-service:
    build:
      context: src/microservices/user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"  # Map container port 3001 to host port 3001
    environment:
      - NODE_ENV=production  # Set Node environment to production
    volumes:
      - .:/app  # Mount local directory to /app in the container
    depends_on:
      - postgres  # Ensure PostgreSQL service is started first
    command: ["npm", "run", "start"]

  purchase-history-service:
    build:
      context: src/microservices/purchase-history-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"  # Map container port 3005 to host port 3005
    environment:
      - NODE_ENV=production  # Set Node environment to production
    volumes:
      - .:/app  # Mount local directory to /app in the container
    depends_on:
      - postgres  # Ensure PostgreSQL service is started first
    command: ["npm", "run", "start"]

  message-service:
    build:
      context: src/microservices/message-service
      dockerfile: Dockerfile
    ports:
      - "3007:3007"  # Map container port 3000 to host port 3000
    environment:
      - NODE_ENV=production  # Set Node environment to production
    volumes:
      - .:/app  # Mount local directory to /app in the container
    depends_on:
      - postgres  # Ensure PostgreSQL service is started first
    command: ["npm", "run", "start"]

  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"  # Map container port 5432 to host port 5432 (adjust if needed)
    volumes:
      - pgdata:/var/lib/postgresql/data  # Persist PostgreSQL data in named volume pgdata
volumes:
  pgdata:  # Define the volume for PostgreSQL data persistence
